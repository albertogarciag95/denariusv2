[{"/home/alberto/projects/denarius-v2/src/index.js":"1","/home/alberto/projects/denarius-v2/src/components/side-menu/side-menu.js":"2","/home/alberto/projects/denarius-v2/src/reportWebVitals.js":"3","/home/alberto/projects/denarius-v2/src/pages/home-page/home-page.js":"4","/home/alberto/projects/denarius-v2/src/App.js":"5","/home/alberto/projects/denarius-v2/src/components/top-menu/top-menu.js":"6","/home/alberto/projects/denarius-v2/src/components/tabs-menu/tabs-menu.js":"7","/home/alberto/projects/denarius-v2/src/pages/process-page/process-page.js":"8","/home/alberto/projects/denarius-v2/src/components/logs-modal/logs-modal.js":"9","/home/alberto/projects/denarius-v2/src/components/home/home-item/home-item.js":"10","/home/alberto/projects/denarius-v2/src/pages/denarius-page/denarius-page.js":"11","/home/alberto/projects/denarius-v2/src/pages/create-process-page/create-process.js":"12","/home/alberto/projects/denarius-v2/src/components/create-process/input-list.js":"13","/home/alberto/projects/denarius-v2/src/pages/upload-inputs-page/upload-inputs.js":"14","/home/alberto/projects/denarius-v2/src/pages/data-management-page/data-management-page.js":"15","/home/alberto/projects/denarius-v2/src/pages/process-page/process-data.js":"16","/home/alberto/projects/denarius-v2/src/components/filter-menu/filter-menu.js":"17","/home/alberto/projects/denarius-v2/src/pages/empty-page/empty-page.js":"18","/home/alberto/projects/denarius-v2/src/pages/login-page/login-page.js":"19","/home/alberto/projects/denarius-v2/src/components/admin-components/route-private.js":"20"},{"size":543,"mtime":1606306553802,"results":"21","hashOfConfig":"22"},{"size":1883,"mtime":1607930650716,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1606299026269,"results":"24","hashOfConfig":"22"},{"size":1687,"mtime":1607936167271,"results":"25","hashOfConfig":"22"},{"size":3929,"mtime":1607948459607,"results":"26","hashOfConfig":"22"},{"size":3102,"mtime":1607948609561,"results":"27","hashOfConfig":"22"},{"size":1013,"mtime":1606321371690,"results":"28","hashOfConfig":"22"},{"size":5234,"mtime":1607930463411,"results":"29","hashOfConfig":"22"},{"size":557,"mtime":1607609097042,"results":"30","hashOfConfig":"22"},{"size":510,"mtime":1607930124926,"results":"31","hashOfConfig":"22"},{"size":799,"mtime":1607067310775,"results":"32","hashOfConfig":"22"},{"size":9006,"mtime":1607692677511,"results":"33","hashOfConfig":"22"},{"size":4255,"mtime":1607599282710,"results":"34","hashOfConfig":"22"},{"size":10030,"mtime":1607933373115,"results":"35","hashOfConfig":"22"},{"size":11654,"mtime":1607931475488,"results":"36","hashOfConfig":"22"},{"size":2017,"mtime":1607600146294,"results":"37","hashOfConfig":"22"},{"size":1623,"mtime":1607932083269,"results":"38","hashOfConfig":"22"},{"size":550,"mtime":1607929445973,"results":"39","hashOfConfig":"22"},{"size":1731,"mtime":1607948008094,"results":"40","hashOfConfig":"22"},{"size":512,"mtime":1607947948660,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1faecix",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alberto/projects/denarius-v2/src/index.js",[],["88","89"],"/home/alberto/projects/denarius-v2/src/components/side-menu/side-menu.js",[],"/home/alberto/projects/denarius-v2/src/reportWebVitals.js",[],["90","91"],"/home/alberto/projects/denarius-v2/src/pages/home-page/home-page.js",[],"/home/alberto/projects/denarius-v2/src/App.js",[],"/home/alberto/projects/denarius-v2/src/components/top-menu/top-menu.js",["92"],"/home/alberto/projects/denarius-v2/src/components/tabs-menu/tabs-menu.js",[],"/home/alberto/projects/denarius-v2/src/pages/process-page/process-page.js",[],"/home/alberto/projects/denarius-v2/src/components/logs-modal/logs-modal.js",["93"],"import React from \"react\";\nimport { Modal, Icon, Header } from \"semantic-ui-react\";\nimport logs from \"./logs.gif\";\n\nconst LogsModal = ({ opened, onClose, selected }) => (\n  <Modal\n    closeIcon\n    size='large'\n    onClose={onClose}\n    open={opened}>\n    <Modal.Header>\n      <Header as='h2'>\n        <Icon name='laptop' />\n        <Header.Content>Proceso {selected}</Header.Content>\n      </Header>\n    </Modal.Header>\n    <Modal.Content>\n      <img style={{ width: \"100%\" }} src={logs}></img>\n    </Modal.Content>\n  </Modal>\n);\n\nexport default LogsModal;","/home/alberto/projects/denarius-v2/src/components/home/home-item/home-item.js",[],"/home/alberto/projects/denarius-v2/src/pages/denarius-page/denarius-page.js",[],"/home/alberto/projects/denarius-v2/src/pages/create-process-page/create-process.js",["94","95"],"import React from \"react\";\nimport { Modal, Step, Segment, Header, Icon, Divider, Form, Button, Input, Breadcrumb, Grid, Tab, List } from \"semantic-ui-react\";\nimport InputList from '../../components/create-process/input-list';\nimport './create-process-styles.scss';\n\nclass CreateProcessPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pipelines: [\"Cash View\", \"Cosmos\", \"Internegocios\"],\n      showInputsModal: false\n    };\n  }\n  render() {\n    const sections = [\n      { key: 'Home', content: 'Process history', link: true },\n      { key: 'Store', content: 'Start process', active: true }\n    ];\n\n    const panes = [\n      { \n        menuItem: { key: 'monthly', icon: 'folder', content: 'Monthly' }, \n        render: () => <Tab.Pane style={{ overflowY: 'scroll', height: '570px' }}><InputList /></Tab.Pane>\n      },\n      { \n        menuItem: { key: 'static', icon: 'folder', content: 'Static' },\n        render: () => <Tab.Pane><InputList /></Tab.Pane>\n      },\n      { \n        menuItem: { key: 'exception', icon: 'folder', content: 'Exception' }, \n        render: () => <Tab.Pane><InputList /></Tab.Pane>\n      }\n    ];\n\n    return (\n      <Segment style={{ backgroundColor: \"white\", width: \"100%\", margin: 0, height: \"800px\" }}>\n        <Breadcrumb size='large' icon='right angle' sections={sections} />\n        <Header as='h1'>\n          <Icon name='play' />\n          <Header.Content>Start process</Header.Content>\n          <Divider />\n        </Header>\n        <Step.Group style={{ width: '100%' }}>\n        <Step style={{ width: '33%' }}>\n          <Icon name='file alternate outline' />\n          <Step.Content>\n            <Step.Title>Basic data</Step.Title>\n            <Step.Description></Step.Description>\n          </Step.Content>\n        </Step>\n\n        <Step style={{ width: '33%' }}>\n          <Icon name='list' />\n          <Step.Content>\n            <Step.Title>Parameters and outputs</Step.Title>\n          </Step.Content>\n        </Step>\n\n        <Step style={{ width: '33%' }}>\n          <Icon name='sign-in alternate' />\n          <Step.Content>\n            <Step.Title>Input Selection</Step.Title>\n          </Step.Content>\n        </Step>\n        </Step.Group>\n        <Grid relaxed divided='vertically' style={{ marginTop: \"10px\", height: '73%' }}>\n          <Grid.Row columns={3}>\n            <Grid.Column>\n              <Form>\n                <Form.Field>\n                  <label>Choose a date:</label>\n                  <input placeholder='2020-11-05' />\n                </Form.Field>\n                <Form.TextArea label='Descripcion:' placeholder='Descripcion...' />\n                <Form.Group widths='equal'>\n                  <Form.Checkbox label='Official' />\n                  <Form.Checkbox label='Sent' />\n                </Form.Group>\n                <Form.Field style={{ marginTop: '30px' }}>\n                  <label>Pipelines:</label>\n                  <div style={{ display: \"flex\", justifyContent: 'space-between', width: \"100%\", margin: \"10px 0\" }}>\n                    {this.state.pipelines.map(pipeline => (\n                        <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", color: \"white\", backgroundColor: \"rgb(236, 0, 0)\", border: \"1px solid red\", borderRadius: \"30px\", padding: \"5px\" }}>\n                          {pipeline}\n                          <Icon name='close' />\n                        </div>\n                    ))}\n                  </div>\n                  <Input size='small' action={{ icon: 'search', onClick: () => console.log(\"hola\") }} placeholder='Buscar...' />\n                </Form.Field>\n              </Form>\n            </Grid.Column>\n            <Grid.Column>\n              <Form>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Parameter 1</label>\n                    <input placeholder='Parameter 1' />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Parameter 2</label>\n                    <input placeholder='Parameter 2' />\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Parameter 3</label>\n                    <input placeholder='Parameter 3' />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Parameter 4</label>\n                    <input placeholder='Parameter 4' />\n                  </Form.Field>\n                </Form.Group>\n                <a>\n                  <Icon name='add'></Icon>\n                  Add more\n                </a>\n              </Form>\n              <Divider style={{ margin: '30px 0' }} />\n              <Form>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Output 1</label>\n                    <input placeholder='Output 1' />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Output 2</label>\n                    <input placeholder='Output 2' />\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths='equal'>\n                  <Form.Field>\n                    <label>Output 3</label>\n                    <input placeholder='Output 3' />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Output 4</label>\n                    <input placeholder='Output 4' />\n                  </Form.Field>\n                </Form.Group>\n                <a>\n                  <Icon name='add'></Icon>\n                  Add more\n                </a>\n              </Form>\n            </Grid.Column>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', height: '100%' }}>\n              <div style={{ display: 'inline-flex', justifyContent: 'space-between', height: '45%', marginTop: '65px', flexDirection: 'column', alignItems: 'center', alignContent: 'center' }}>\n                <List size='big'>\n                  <List.Item>\n                    <List.Icon name='folder' />\n                    <List.Content>\n                      <List.Header>Static</List.Header>\n                      <List.Content>(24 inputs)</List.Content>\n                    </List.Content>\n                  </List.Item>\n                  <List.Item>\n                    <List.Icon name='folder' />\n                    <List.Content>\n                      <List.Header>Monthly</List.Header>\n                      <List.Content>(32 inputs)</List.Content>\n                    </List.Content>\n                  </List.Item>\n                  <List.Item>\n                    <List.Icon name='folder' />\n                    <List.Content>\n                      <List.Header>Exception</List.Header>\n                      <List.Content>(7 inputs)</List.Content>\n                    </List.Content>\n                  </List.Item>\n                </List>\n                <Modal\n                  size='large'\n                  closeIcon\n                  style={{ height: '800px' }}\n                  open={this.state.showInputsModal}\n                  trigger={\n                    <Button icon labelPosition='left' style={{ textAlign: 'center', width: '40%', height: '40px' }}>\n                      <Icon name='add'></Icon>\n                      Add inputs\n                    </Button>}\n                  onClose={() => this.setState({ showInputsModal: false })}\n                  onOpen={() => this.setState({ showInputsModal: true })}\n                >\n                  <Header icon='add' content='Add inputs' />\n                  <Modal.Content>\n                    <div style={{ float: 'right' }} >\n                      <Button icon basic color='red' labelPosition='left'>\n                        <Icon name='tasks' />\n                        Massive selection\n                      </Button>\n                      <Input icon='search' placeholder='Search...' />\n                    </div>\n                    <Tab menu={{ borderless: true, attached: false, tabular: false }} panes={panes} />\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button color='red' onClick={() => this.setState({ showInputsModal: false })}>\n                      <Icon name='remove' /> Cancel\n                    </Button>\n                    <Button color='green' onClick={() => this.setState({ showInputsModal: true })}>\n                      <Icon name='checkmark' /> Confirm\n                    </Button>\n                  </Modal.Actions>\n                </Modal>\n              </div>\n              <Button className='main-button' inverted size='big' style={{ bottom: 0, width: '40%', marginLeft: '60%' }} color='red'>\n                <Icon name='play' />\n                Start\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n};\n\nexport default CreateProcessPage;","/home/alberto/projects/denarius-v2/src/components/create-process/input-list.js",[],"/home/alberto/projects/denarius-v2/src/pages/upload-inputs-page/upload-inputs.js",[],"/home/alberto/projects/denarius-v2/src/pages/data-management-page/data-management-page.js",[],"/home/alberto/projects/denarius-v2/src/pages/process-page/process-data.js",[],"/home/alberto/projects/denarius-v2/src/components/filter-menu/filter-menu.js",["96"],"import React, { useState } from \"react\";\nimport { Popup, Button, Icon, Form, Grid, Checkbox, Divider } from \"semantic-ui-react\";\nimport './filter-menu.scss';\n\nconst FilterMenu = ({ fields, columns = 3, allign }) => {\n  fields.sort((a, b) => a.order < b.order ? -1 : 1);\n  const filterPerColumn = Math.round(fields.length / columns);\n  const lastColumn = fields.length % columns;\n  const gridColumns = [];\n\n  let filters = [];\n  let columnStart = 0;\n\n  for(let index = 0; index < columns; index ++) {\n    filters = (index === 0 && allign === 'right') ? \n      fields.slice(columnStart, lastColumn) :\n      fields.slice(columnStart, filterPerColumn + columnStart);\n          \n    gridColumns.push(\n      <Grid.Column key={index}>\n        <Form>\n          {filters.map(({ text, inputType }) => (\n            <Form.Field>\n              <label>{text}</label>\n              {inputType === 'text' ? <input /> : \n                (inputType === 'date' ? <input type='date' /> : <Checkbox toggle />)}\n            </Form.Field>\n          ))}\n        </Form>\n      </Grid.Column>\n    );\n    columnStart += (index === 0 && allign === 'right') ? lastColumn : filterPerColumn;\n  }\n\n  return (\n    <Popup wide='very' hoverable position='bottom right' trigger={\n      <Button inverted color='red' className='main-button' icon style={{ marginRight: '10px' }}>\n        <Icon name='filter' />\n      </Button>}>\n      <Grid columns={columns}>{gridColumns}</Grid>\n      <Divider />\n      <Button className='main-button' content='Aplicar filtro' style={{ float: 'right' }} inverted color=\"red\" />\n    </Popup>\n  );\n};\n\nexport default FilterMenu;\n","/home/alberto/projects/denarius-v2/src/pages/empty-page/empty-page.js",[],["97","98"],"/home/alberto/projects/denarius-v2/src/pages/login-page/login-page.js",[],"/home/alberto/projects/denarius-v2/src/components/admin-components/route-private.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":13,"nodeType":"107","endLine":27,"endColumn":136},{"ruleId":"105","severity":1,"message":"106","line":18,"column":7,"nodeType":"107","endLine":18,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":116,"column":17,"nodeType":"107","endLine":116,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":143,"column":17,"nodeType":"107","endLine":143,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"99","replacedBy":"114"},{"ruleId":"101","replacedBy":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["116"],["117"],"no-global-assign","no-unsafe-negation"]